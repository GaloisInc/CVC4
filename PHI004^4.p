%------------------------------------------------------------------------------
% File     : PHI004^4 : TPTP v7.2.0. Released v6.4.0.
% Domain   : Philosophy
% Problem  : Being God-like is an essence of any God-like being
% Version  : [Ben16] axioms : Biased.
% English  :

% Refs     : [Ben16] Benzmueller (2016), Email to Geoff Sutcliffe
% Source   : [Ben16]
% Names    : Sledgehammer_T2_S5U_direct_satallax.p [Ben16]

% Status   : Theorem
% Rating   : 0.78 v7.2.0, 0.75 v7.0.0, 0.71 v6.4.0
% Syntax   : Number of formulae    :   17 (   0 unit;   6 type;   0 defn)
%            Number of atoms       :   81 (   3 equality;  57 variable)
%            Maximal formula depth :   13 (   7 average)
%            Number of connectives :   69 (   5   ~;   1   |;   2   &;  52   @)
%                                         (   0 <=>;   9  =>;   0  <=;   0 <~>)
%                                         (   0  ~|;   0  ~&)
%            Number of type conns  :   31 (  31   >;   0   *;   0   +;   0  <<)
%            Number of symbols     :    8 (   6   :;   0   =)
%            Number of variables   :   37 (   1 sgn;  24   !;   2   ?;  11   ^)
%                                         (  37   :;   0  !>;   0  ?*)
%                                         (   0  @-;   0  @+)
% SPC      : TH0_THM_EQU_NAR

% Comments : This problem file has been generated by Sledgehammer (satallax
%            translation) in default setting.
%------------------------------------------------------------------------------
%----Could-be-implicit typings (2)
thf(ty_n_t__QML____S5U__O__092__060mu__062, type,
    qML_mu : $tType).
thf(ty_n_t__QML____S5U__Oi, type,
    qML_i : $tType).

%----Explicit typings (4)
thf(sy_c_Scott__S5U_OG, type,
    scott_G : qML_mu > qML_i > $o).
thf(sy_c_Scott__S5U_ONE_001t__QML____S5U__O__092__060mu__062, type,
    scott_NE_QML_mu : qML_mu > qML_i > $o).
thf(sy_c_Scott__S5U_OP, type,
    scott_P : (qML_mu > qML_i > $o) > qML_i > $o).
thf(sy_c_Scott__S5U_Oess_001t__QML____S5U__O__092__060mu__062, type,
    scott_ess_QML_mu : (qML_mu > qML_i > $o) > qML_mu > qML_i > $o).

%----Relevant facts (10)
thf(fact_0_G__def, axiom,
    ((scott_G = (^[X : qML_mu]: (^[W : qML_i]: (![Y : qML_mu > qML_i > $o]: (((scott_P @ Y @ W)) => ((Y @ X @ W))))))))). % G_def
thf(fact_1_T3, axiom,
    ((![W2 : qML_i, V : qML_i]: (?[X2 : qML_mu]: (scott_G @ X2 @ V))))). % T3
thf(fact_2_A4, axiom,
    ((![W2 : qML_i, X3 : qML_mu > qML_i > $o]: ((scott_P @ X3 @ W2) => (![X_1 : qML_i]: (scott_P @ X3 @ X_1)))))). % A4
thf(fact_3_A3, axiom,
    ((![X_1 : qML_i]: (scott_P @ scott_G @ X_1)))). % A3
thf(fact_4_ess__def, axiom,
    ((scott_ess_QML_mu = (^[Phi : qML_mu > qML_i > $o]: (^[X : qML_mu]: (^[W : qML_i]: (((Phi @ X @ W)) & ((![Y : qML_mu > qML_i > $o]: (((Y @ X @ W)) => ((![V2 : qML_i]: (![Z : qML_mu]: (((Phi @ Z @ V2)) => ((Y @ Z @ V2)))))))))))))))). % ess_def
thf(fact_5_A1b, axiom,
    ((![W2 : qML_i, X3 : qML_mu > qML_i > $o]: ((~ ((scott_P @ X3 @ W2))) => (scott_P @ (^[Y : qML_mu]: (^[Z : qML_i]: (~ ((X3 @ Y @ Z))))) @ W2))))). % A1b
thf(fact_6_A2, axiom,
    ((![W2 : qML_i, X3 : qML_mu > qML_i > $o, Xa : qML_mu > qML_i > $o]: (((scott_P @ X3 @ W2) & (![V3 : qML_i, Xb : qML_mu]: ((X3 @ Xb @ V3) => (Xa @ Xb @ V3)))) => (scott_P @ Xa @ W2))))). % A2
thf(fact_7_A5, axiom,
    ((![X_1 : qML_i]: (scott_P @ scott_NE_QML_mu @ X_1)))). % A5
thf(fact_8_A1a, axiom,
    ((![W2 : qML_i, X3 : qML_mu > qML_i > $o]: ((scott_P @ (^[Y : qML_mu]: (^[Z : qML_i]: (~ ((X3 @ Y @ Z))))) @ W2) => (~ ((scott_P @ X3 @ W2))))))). % A1a
thf(fact_9_NE__def, axiom,
    ((scott_NE_QML_mu = (^[X : qML_mu]: (^[W : qML_i]: (![Y : qML_mu > qML_i > $o]: (((scott_ess_QML_mu @ Y @ X @ W)) => ((![V2 : qML_i]: (?[Z : qML_mu]: (Y @ Z @ V2))))))))))). % NE_def

%----Conjectures (1)
thf(conj_0, conjecture,
    ((![W3 : qML_i, X2 : qML_mu]: ((~ ((scott_G @ X2 @ W3))) | (scott_ess_QML_mu @ scott_G @ X2 @ W3))))).

%------------------------------------------------------------------------------
