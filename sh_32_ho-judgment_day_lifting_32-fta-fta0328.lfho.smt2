(set-logic ALL)
(set-option :produce-models true)
(declare-sort $$unsorted 0)
(declare-sort poly_p1267267526omplex 0)
(declare-sort poly_poly_complex 0)
(declare-sort poly_complex 0)
(declare-sort poly_nat 0)
(declare-sort complex 0)
(declare-sort real 0)
(declare-sort bool 0)
(declare-sort nat 0)
(declare-fun fundam769667258omplex ((-> complex complex)) Bool)
(declare-fun fundam835161864omplex (poly_complex) nat)
(declare-fun plus_plus_complex (complex complex) complex)
(declare-fun plus_plus_nat (nat nat) nat)
(declare-fun plus_p1547158847omplex (poly_complex poly_complex) poly_complex)
(declare-fun plus_p138939463omplex (poly_poly_complex poly_poly_complex) poly_poly_complex)
(declare-fun zero_zero_complex () complex)
(declare-fun zero_zero_nat () nat)
(declare-fun zero_z1746442943omplex () poly_complex)
(declare-fun zero_zero_poly_nat () poly_nat)
(declare-fun zero_z1040703943omplex () poly_poly_complex)
(declare-fun zero_z1200043727omplex () poly_p1267267526omplex)
(declare-fun ord_less_nat (nat nat) Bool)
(declare-fun ord_less_eq_nat (nat nat) Bool)
(declare-fun ord_less_eq_real (real real) Bool)
(declare-fun poly_complex2 (poly_complex complex) complex)
(declare-fun poly_nat2 (poly_nat nat) nat)
(declare-fun poly_poly_complex2 (poly_poly_complex poly_complex) poly_complex)
(declare-fun poly_p282434315omplex (poly_p1267267526omplex poly_poly_complex) poly_poly_complex)
(declare-fun real_V638595069omplex (complex) real)
(declare-fun fFalse () bool)
(declare-fun fTrue () bool)
(declare-fun pp (bool) Bool)
(declare-fun a () complex)
(declare-fun c () complex)
(declare-fun p () poly_complex)
(declare-fun pa () poly_complex)
(declare-fun q () poly_complex)
(assert (not (= a zero_zero_complex)))
(assert (forall ((X complex)) (= (poly_complex2 q X) (poly_complex2 pa (plus_plus_complex c X))) ))
(assert (not (fundam769667258omplex (poly_complex2 p))))
(assert (not (= (poly_complex2 pa c) zero_zero_complex)))
(assert (not (fundam769667258omplex (poly_complex2 pa))))
(assert (not (= (poly_complex2 q zero_zero_complex) zero_zero_complex)))
(assert (= (poly_complex2 pa c) (poly_complex2 q zero_zero_complex)))
(assert (= (fundam835161864omplex q) (fundam835161864omplex pa)))
(assert (forall ((X2 poly_poly_complex)) (= (poly_p282434315omplex zero_z1200043727omplex X2) zero_z1040703943omplex) ))
(assert (forall ((X2 nat)) (= (poly_nat2 zero_zero_poly_nat X2) zero_zero_nat) ))
(assert (forall ((X2 poly_complex)) (= (poly_poly_complex2 zero_z1040703943omplex X2) zero_z1746442943omplex) ))
(assert (forall ((X2 complex)) (= (poly_complex2 zero_z1746442943omplex X2) zero_zero_complex) ))
(assert (forall ((P poly_p1267267526omplex)) (= (forall ((X3 poly_poly_complex)) (= (poly_p282434315omplex P X3) zero_z1040703943omplex) ) (= P zero_z1200043727omplex)) ))
(assert (forall ((P poly_complex)) (= (forall ((X3 complex)) (= (poly_complex2 P X3) zero_zero_complex) ) (= P zero_z1746442943omplex)) ))
(assert (forall ((P poly_poly_complex)) (= (forall ((X3 poly_complex)) (= (poly_poly_complex2 P X3) zero_z1746442943omplex) ) (= P zero_z1040703943omplex)) ))
(assert (exists ((Q poly_complex)) (and (= (fundam835161864omplex Q) (fundam835161864omplex pa)) (forall ((X complex)) (= (poly_complex2 Q X) (poly_complex2 pa (plus_plus_complex c X))) )) ))
(assert (not (forall ((Q poly_complex)) (=> (= (fundam835161864omplex Q) (fundam835161864omplex pa)) (not (forall ((X complex)) (= (poly_complex2 Q X) (poly_complex2 pa (plus_plus_complex c X))) ))) )))
(assert (not (fundam769667258omplex (poly_complex2 q))))
(assert (not (fundam769667258omplex (poly_complex2 q))))
(assert (forall ((P poly_poly_complex) (Q2 poly_poly_complex)) (= (= (poly_poly_complex2 P) (poly_poly_complex2 Q2)) (= P Q2)) ))
(assert (forall ((P poly_complex) (Q2 poly_complex)) (= (= (poly_complex2 P) (poly_complex2 Q2)) (= P Q2)) ))
(assert (forall ((W complex)) (ord_less_eq_real (real_V638595069omplex (poly_complex2 pa c)) (real_V638595069omplex (poly_complex2 pa W))) ))
(assert (forall ((X2 poly_poly_complex)) (= (= zero_z1040703943omplex X2) (= X2 zero_z1040703943omplex)) ))
(assert (forall ((X2 nat)) (= (= zero_zero_nat X2) (= X2 zero_zero_nat)) ))
(assert (forall ((X2 complex)) (= (= zero_zero_complex X2) (= X2 zero_zero_complex)) ))
(assert (forall ((X2 poly_complex)) (= (= zero_z1746442943omplex X2) (= X2 zero_z1746442943omplex)) ))
(assert (forall ((W complex)) (ord_less_eq_real (real_V638595069omplex (poly_complex2 q zero_zero_complex)) (real_V638595069omplex (poly_complex2 pa W))) ))
(assert (forall ((P poly_complex)) (=> (ord_less_nat (fundam835161864omplex P) (fundam835161864omplex pa)) (=> (not (fundam769667258omplex (poly_complex2 P))) (exists ((Z complex)) (= (poly_complex2 P Z) zero_zero_complex) ))) ))
(assert (forall ((A poly_complex) (B poly_complex) (C poly_complex)) (= (= (plus_p1547158847omplex A B) (plus_p1547158847omplex A C)) (= B C)) ))
(assert (forall ((A complex) (B complex) (C complex)) (= (= (plus_plus_complex A B) (plus_plus_complex A C)) (= B C)) ))
(assert (forall ((B poly_complex) (A poly_complex) (C poly_complex)) (= (= (plus_p1547158847omplex B A) (plus_p1547158847omplex C A)) (= B C)) ))
(assert (forall ((B complex) (A complex) (C complex)) (= (= (plus_plus_complex B A) (plus_plus_complex C A)) (= B C)) ))
(assert (not (forall ((C2 complex)) (not (forall ((W complex)) (ord_less_eq_real (real_V638595069omplex (poly_complex2 pa C2)) (real_V638595069omplex (poly_complex2 pa W))) )) )))
(assert (forall ((N nat)) (= (ord_less_eq_nat N zero_zero_nat) (= N zero_zero_nat)) ))
(assert (forall ((N nat)) (= (not (ord_less_nat zero_zero_nat N)) (= N zero_zero_nat)) ))
(assert (forall ((X2 nat) (Y nat)) (= (= zero_zero_nat (plus_plus_nat X2 Y)) (and (= X2 zero_zero_nat) (= Y zero_zero_nat))) ))
(assert (forall ((X2 nat) (Y nat)) (= (= (plus_plus_nat X2 Y) zero_zero_nat) (and (= X2 zero_zero_nat) (= Y zero_zero_nat))) ))
(assert (forall ((A poly_poly_complex) (B poly_poly_complex)) (= (= A (plus_p138939463omplex A B)) (= B zero_z1040703943omplex)) ))
(assert (forall ((A nat) (B nat)) (= (= A (plus_plus_nat A B)) (= B zero_zero_nat)) ))
(assert (forall ((A complex) (B complex)) (= (= A (plus_plus_complex A B)) (= B zero_zero_complex)) ))
(assert (forall ((A poly_complex) (B poly_complex)) (= (= A (plus_p1547158847omplex A B)) (= B zero_z1746442943omplex)) ))
(assert (forall ((A poly_poly_complex) (B poly_poly_complex)) (= (= A (plus_p138939463omplex B A)) (= B zero_z1040703943omplex)) ))
(assert (forall ((A nat) (B nat)) (= (= A (plus_plus_nat B A)) (= B zero_zero_nat)) ))
(assert (forall ((A complex) (B complex)) (= (= A (plus_plus_complex B A)) (= B zero_zero_complex)) ))
(assert (forall ((A poly_complex) (B poly_complex)) (= (= A (plus_p1547158847omplex B A)) (= B zero_z1746442943omplex)) ))
(assert (forall ((A poly_poly_complex) (B poly_poly_complex)) (= (= (plus_p138939463omplex A B) A) (= B zero_z1040703943omplex)) ))
(assert (forall ((A nat) (B nat)) (= (= (plus_plus_nat A B) A) (= B zero_zero_nat)) ))
(assert (forall ((A complex) (B complex)) (= (= (plus_plus_complex A B) A) (= B zero_zero_complex)) ))
(assert (forall ((A poly_complex) (B poly_complex)) (= (= (plus_p1547158847omplex A B) A) (= B zero_z1746442943omplex)) ))
(assert (forall ((B poly_poly_complex) (A poly_poly_complex)) (= (= (plus_p138939463omplex B A) A) (= B zero_z1040703943omplex)) ))
(assert (forall ((B nat) (A nat)) (= (= (plus_plus_nat B A) A) (= B zero_zero_nat)) ))
(assert (forall ((B complex) (A complex)) (= (= (plus_plus_complex B A) A) (= B zero_zero_complex)) ))
(assert (forall ((B poly_complex) (A poly_complex)) (= (= (plus_p1547158847omplex B A) A) (= B zero_z1746442943omplex)) ))
(assert (pp fTrue))
(assert (not (pp fFalse)))
(assert (not (exists ((Z2 complex)) (= (poly_complex2 pa Z2) zero_zero_complex) )))
(check-sat)
(get-model)